version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: slow_query_db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - ./mysql/data:/var/lib/mysql
      - ./mysql/config:/etc/mysql/conf.d
      - ./mysql/logs:/var/log/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.0.0
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    volumes:
      - ./elasticsearch/data:/usr/share/elasticsearch/data

  logstash:
    image: docker.elastic.co/logstash/logstash:8.0.0
    volumes:
      - ./logstash/config:/usr/share/logstash/pipeline
    command: bash -c "logstash-plugin install logstash-output-gelf && logstash"
    ports:
      - "5044:5044"
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:8.0.0
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  graylog:
    image: graylog/graylog:4.3
    environment:
      GRAYLOG_HTTP_EXTERNAL_URI: "http://localhost:9000/"
      GRAYLOG_ROOT_PASSWORD_SHA2: "your_sha_password"
      GRAYLOG_PASSWORD_SECRET: "your_random_password_secret"
    ports:
      - "9000:9000"
      - "12201:12201/udp"
    depends_on:
      - mongodb
      - elasticsearch

  mongodb:
    image: mongo:4.2
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root

  telegraf:
    image: telegraf:latest
    user: root
    privileged: true
    volumes:
      - ./telegraf/etc/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - influxdb
      - mysql
      - app
      - kibana
      - logstash
      - mongodb
      - elasticsearch
      - grafana
      - graylog
    links:
      - influxdb
    ports:
      - '127.0.0.1:8125:8125/udp'
    entrypoint: /bin/sh -c "chmod 666 /var/run/docker.sock && /entrypoint.sh telegraf"

  grafana:
    image: grafana/grafana:8.0.2
    depends_on:
      - influxdb
    env_file: configuration.env
    ports:
      - '127.0.0.1:3000:3000'
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=adminpassword
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/dashboards/:/var/lib/grafana/dashboards/

  influxdb:
    image: influxdb:1.8
    env_file: configuration.env
    ports:
      - '127.0.0.1:8086:8086'
    volumes:
      - ./:/imports
      - ./influxdb/data:/var/lib/influxdb
    entrypoint: sh -c "influxd run -config /etc/influxdb/influxdb.conf & until influx -host localhost -execute 'CREATE DATABASE telegraf'; do echo waiting for influxdb; sleep 1; done; wait"

  app:
    image: node:18
    container_name: node_app
    working_dir: /usr/src/app
    volumes:
      - ./app:/usr/src/app
    command: "node index.js"
    depends_on:
      - mysql
    ports:
      - "8080:8080"
    networks:
      - default

volumes:
  grafana_data: {}
  influxdb_data: {}
  mongodb_data: {}